ext {

  // Versions

  buildToolsVersionVar = "26.0.0"

  minSdkVersionVar = 19
  compileSdkVersionVar = 26
  targetSdkVersionVar = 26

  supportVersion = "26.0.1"
  playServicesVersion = "11.6.2"
  firebaseVersion = "11.6.2"
  retrofitVersion = "2.3.0"
  leakCanaryVersion = "1.5.2"
  powerMockVersion = "1.6.6"
  daggerVersion = "2.11"

  timberVersion = "4.3.1"

  // Multiple Libraries dependencies

  supportDependencies = [
    appCompat        : "com.android.support:appcompat-v7:${supportVersion}",
    recyclerView     : "com.android.support:recyclerview-v7:${supportVersion}",
    cardView         : "com.android.support:cardview-v7:${supportVersion}",
    design           : "com.android.support:design:${supportVersion}",
    supportAnnotation: "com.android.support:support-annotations:${supportVersion}",
    preference       : "com.android.support:preference-v7:${supportVersion}",
    preference14     : "com.android.support:preference-v14:${supportVersion}",
    support          : "com.android.support:support-v4:${supportVersion}"
  ]

  leakCanaryDependencies = [
    leakDebug  : "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
    leakRelease: "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
    leakTest   : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"
  ]

  networkDependencies = [
    retrofit      : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
    rxjava_adapter: "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}",
    converter_gson: "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
  ]

  timberDependencies = [
    timber: "com.jakewharton.timber:timber:${timberVersion}"
  ]

  playDependencies = [
    gcm      : "com.google.android.gms:play-services-gcm:${playServicesVersion}",
    maps     : "com.google.android.gms:play-services-maps:${playServicesVersion}",
    places   : "com.google.android.gms:play-services-places:${playServicesVersion}",
    location : "com.google.android.gms:play-services-location:${playServicesVersion}",
    analytics: "com.google.android.gms:play-services-analytics:${playServicesVersion}",
    auth     : "com.google.android.gms:play-services-auth:${playServicesVersion}"
  ]

  firebaseDependencies = [
    core     : "com.google.firebase:firebase-core:${firebaseVersion}",
    messaging: "com.google.firebase:firebase-messaging:${firebaseVersion}",
    auth     : "com.google.firebase:firebase-auth:${firebaseVersion}"
  ]

  powerMockDependencies = [
    rule        : "org.powermock:powermock-module-junit4:${powerMockVersion}",
    api         : "org.powermock:powermock-api-mockito:${powerMockVersion}",
    classloading: "org.powermock:powermock-classloading-xstream:${powerMockVersion}"
  ]

  daggerDependencies = [
    general          : "com.google.dagger:dagger:$daggerVersion",
    support          : "com.google.dagger:dagger-android-support:$daggerVersion",
    compiler         : "com.google.dagger:dagger-compiler:$daggerVersion",
    android_processor: "com.google.dagger:dagger-android-processor:$daggerVersion"
  ]

  ankoDependencies = [
    commons          : "org.jetbrains.anko:anko-common:$ankoVersion",
    design           : "org.jetbrains.anko:anko-design:$ankoVersion",
    appcompat7       : "org.jetbrains.anko:anko-appcompat-v7:$ankoVersion",
    appcompat7commons: "org.jetbrains.anko:anko-appcompat-v7-commons:$ankoVersion",
    sdk25            : "org.jetbrains.anko:anko-sdk25:$ankoVersion"
  ]

}
